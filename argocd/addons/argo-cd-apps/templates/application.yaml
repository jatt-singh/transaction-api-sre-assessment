{{- range $idx, $app := .Values.apps }}
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  {{- if $app.releaseName }}
  name: {{ $app.releaseName }}-{{ $.Values.defaults.env }}
  {{- else }}
  name: {{ $app.name }}-{{ $.Values.defaults.env }}
  {{- end }}
  # You'll usually want to add your resources to the argocd namespace.
  namespace: argocd
  # Add labels to your application object.
  labels: {}
spec:
  # The project the application belongs to.
  project: default

  # Source of the application manifests
  source:
    repoURL: {{ $.Values.defaults.source.repoURL }} # Can point to either a Helm chart repo or a git repo.
    targetRevision: {{ default $.Values.defaults.source.targetRevision $app.targetRevision }} # For Helm, this refers to the chart version.
    path: apps/{{ $app.name }} # This has no meaning for Helm charts pulled directly from a Helm repo instead of git.

    # directory
    {{- if (($app.source).directory) }}
    directory:
      recurse: true
    {{- else }}
    helm:
      releaseName: {{ default $app.name $app.releaseName }}
      # Helm values files for overriding values in the helm chart
      # The path is relative to the spec.source.path directory defined above
      valueFiles: {{ (default $.Values.defaults.source.helm.valueFiles $app.valueFiles | toYaml) | nindent 8 }}

      # Ignore locally missing valueFiles when installing Helm chart. Defaults to false
      ignoreMissingValueFiles: false

      # Skip custom resource definition installation if chart contains custom resource definitions. Defaults to false
      skipCrds: false

      # Optional Helm version to template with. If omitted it will fall back to look at the 'apiVersion' in Chart.yaml
      # and decide which Helm binary to use automatically. This field can be either 'v2' or 'v3'.
      version: v3
    {{- end }}

  # Destination cluster and namespace to deploy the application
  destination:
    # cluster API URL
    server: {{ $.Values.defaults.destination.server }}
    # or cluster name
    # name: in-cluster
    # The namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace
    namespace: {{ $app.namespace }}

  # Sync policy
  syncPolicy:
    {{- if $app.autosync }}
    automated: # automated sync by default retries failed attempts 5 times with following delays between attempts ( 5s, 10s, 20s, 40s, 80s ); retry controlled using `retry` field.
      prune: true # Specifies if resources should be pruned during auto-syncing ( false by default ).
      selfHeal: true # Specifies if partial app sync should be executed when resources are changed only in target Kubernetes cluster and no git change detected ( false by default ).
      allowEmpty: false # Allows deleting all application resources during automatic syncing ( false by default ).
    {{- end }}
    syncOptions: # Sync options which modifies sync behavior
      - CreateNamespace=true # Namespace Auto-Creation ensures that namespace specified as the application destination exists in the destination cluster.
      - PruneLast=true # Allow the ability for resource pruning to happen as a final, implicit wave of a sync operation
      - ApplyOutOfSyncOnly=true # Only sync out-of-sync resources, rather than applying every object in the application
      - ServerSideApply=true
      # - Validate=false # disables resource validation (equivalent to 'kubectl apply --validate=false') ( true by default ).
      # - PrunePropagationPolicy=foreground # Supported policies are background, foreground and orphan.
      # - RespectIgnoreDifferences=true # When syncing changes, respect fields ignored by the ignoreDifferences configuration
    # The retry feature is available since v1.7
    retry:
      limit: 2 # number of failed sync attempt retries; unlimited number of attempts if less than 0
      backoff:
        duration: 5s # the amount to back off. Default unit is seconds, but could also be a duration (e.g. "2m", "1h")
        factor: 2 # a factor to multiply the base duration after each failed retry
        maxDuration: 3m # the maximum amount of time allowed for the backoff strategy


  # RevisionHistoryLimit limits the number of items kept in the application's revision history, which is used for
  # informational purposes as well as for rollbacks to previous versions. This should only be changed in exceptional
  # circumstances. Setting to zero will store no history. This will reduce storage used. Increasing will increase the
  # space used to store the history, so we do not recommend increasing it.
  revisionHistoryLimit: 5
{{- end }}
{{- range $idx, $app := .Values.addons }}
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  {{- if $app.releaseName }}
  name: {{ $app.name }}-{{ $app.releaseName }}-{{ $.Values.defaults.env }}
  {{- else }}
  name: {{ $app.name }}-{{ $.Values.defaults.env }}
  {{- end }}
  # You'll usually want to add your resources to the argocd namespace.
  namespace: argocd
  # Add labels to your application object.
  labels: {}
spec:
  # The project the application belongs to.
  project: default

  # Source of the application manifests
  source:
    repoURL: {{ $.Values.defaults.source.repoURL }} # Can point to either a Helm chart repo or a git repo.
    targetRevision: {{ default $.Values.defaults.source.targetRevision $app.targetRevision }} # For Helm, this refers to the chart version.
    path: addons/{{ $app.name }} # This has no meaning for Helm charts pulled directly from a Helm repo instead of git.

    # directory
    {{- if (($app.source).directory) }}
    directory:
      recurse: true
    {{- else }}
    helm:
      releaseName: {{ default $app.name $app.releaseName }}
      # Helm values files for overriding values in the helm chart
      # The path is relative to the spec.source.path directory defined above
      valueFiles: {{ (default $.Values.defaults.source.helm.valueFiles $app.valueFiles | toYaml) | nindent 8 }}

      # Ignore locally missing valueFiles when installing Helm chart. Defaults to false
      ignoreMissingValueFiles: false

      # Skip custom resource definition installation if chart contains custom resource definitions. Defaults to false
      skipCrds: false

      # Optional Helm version to template with. If omitted it will fall back to look at the 'apiVersion' in Chart.yaml
      # and decide which Helm binary to use automatically. This field can be either 'v2' or 'v3'.
      version: v3
    {{- end }}

  # Destination cluster and namespace to deploy the application
  destination:
    # cluster API URL
    server: {{ $.Values.defaults.destination.server }}
    # or cluster name
    # name: in-cluster
    # The namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace
    namespace: {{ default $.Values.defaults.destination.namespace $app.namespace }}

  # Sync policy
  syncPolicy:
    {{- if $app.autosync }}
    automated: # automated sync by default retries failed attempts 5 times with following delays between attempts ( 5s, 10s, 20s, 40s, 80s ); retry controlled using `retry` field.
      prune: true # Specifies if resources should be pruned during auto-syncing ( false by default ).
      selfHeal: true # Specifies if partial app sync should be executed when resources are changed only in target Kubernetes cluster and no git change detected ( false by default ).
      allowEmpty: false # Allows deleting all application resources during automatic syncing ( false by default ).
    {{- end }}
    syncOptions: # Sync options which modifies sync behavior
      - CreateNamespace=true # Namespace Auto-Creation ensures that namespace specified as the application destination exists in the destination cluster.
      - PruneLast=true # Allow the ability for resource pruning to happen as a final, implicit wave of a sync operation
      - ApplyOutOfSyncOnly=true # Only sync out-of-sync resources, rather than applying every object in the application
      - ServerSideApply=true
    #   - RespectIgnoreDifferences=true # When syncing changes, respect fields ignored by the ignoreDifferences configuration
    #   - Validate=false # disables resource validation (equivalent to 'kubectl apply --validate=false') ( true by default ).
    #   - PrunePropagationPolicy=foreground # Supported policies are background, foreground and orphan.

    # The retry feature is available since v1.7
    retry:
      limit: 2 # number of failed sync attempt retries; unlimited number of attempts if less than 0
      backoff:
        duration: 5s # the amount to back off. Default unit is seconds, but could also be a duration (e.g. "2m", "1h")
        factor: 2 # a factor to multiply the base duration after each failed retry
        maxDuration: 3m # the maximum amount of time allowed for the backoff strategy

  # RevisionHistoryLimit limits the number of items kept in the application's revision history, which is used for
  # informational purposes as well as for rollbacks to previous versions. This should only be changed in exceptional
  # circumstances. Setting to zero will store no history. This will reduce storage used. Increasing will increase the
  # space used to store the history, so we do not recommend increasing it.
  revisionHistoryLimit: 5
{{- end }}
